@model IEnumerable<WebApplication1.Models.Movie>
@{
    ViewData["Title"] = "Home Page";
}

<style>
    /* Modal overlay */
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        inset: 0;
        background: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(6px);
    }

    /* Modal box */
    .modal-content {
        background: rgba(28, 28, 28, 0.95);
        color: #f0f0f0;
        margin: 10% auto;
        padding: 12px 14px;
        border-radius: 14px;
        width: 420px;
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: 0 12px 36px rgba(0,0,0,0.6);
        font-family: 'Segoe UI', Arial, sans-serif;
        backdrop-filter: blur(4px);
    }

        .modal-content input,
        .modal-content textarea {
            width: 100%;
            margin-bottom: 14px;
            padding: 12px 14px;
            border-radius: 10px;
            border: 1px solid #333;
            background: #2b2b2b;
            color: #fff;
            font-size: 1rem;
        }

            .modal-content input:focus,
            .modal-content textarea:focus {
                border-color: #4a7a53;
                box-shadow: 0 0 8px rgba(74,122,83,0.6);
                outline: none;
            }

        .modal-content button {
            margin-right: 10px;
            padding: 10px 22px;
            border-radius: 10px;
            border: none;
            cursor: pointer;
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: background 0.2s ease;
        }

        .modal-content .submit-btn {
            background: #4a7a53;
            color: #fff;
        }

        .modal-content .cancel-btn {
            background: #2f2f2f;
            color: #ddd;
        }

    body {
        background: #121212;
        color: #e0e0e0;
        font-family: 'Segoe UI', Arial, sans-serif;
        margin: 0;
        padding: 20px 0 0 0; /* added top padding */
    }

    .row {
        margin-top: 24px;
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        gap: 20px;
    }

    .card {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        background: linear-gradient(145deg, #1c1c1c, #232323);
        border-radius: 14px;
        box-shadow: 0 8px 28px rgba(0,0,0,0.5);
        color: #f0f0f0;
        width: 220px;
        height: 420px;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        position: relative;
    }

        .card:hover {
            transform: translateY(-4px) scale(1.1);
            box-shadow: 0 12px 36px rgba(0,0,0,0.7);
            z-index: 10;
        }

        .card img {
            width: 100%;
            height: 240px;
            object-fit: cover;
            border-bottom: 1px solid rgba(255,255,255,0.05);
            transition: transform 0.2s ease, filter 0.2s ease;
        }

            .card img:hover {
                transform: scale(1.02);
                filter: brightness(1) contrast(1.05) saturate(1);
            }

    .card-body {
        padding: 14px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        flex: 1;
    }

    .card-title {
        font-weight: 700;
        color: #f5f5f5;
        margin-bottom: 8px;
        font-size: 1.05rem;
    }

    .card-text {
        color: #b5b5b5;
        font-size: 0.9rem;
        flex-grow: 1;
        overflow: hidden;
        line-height: 1.3rem;
    }

    .btn-primary {
        background: #4a7a53;
        border: none;
        font-weight: 600;
        font-size: 0.9rem;
        border-radius: 8px;
        padding: 8px 14px;
        cursor: pointer;
    }

        .btn-primary:hover {
            background: #5e8f68;
        }

    .card[onclick] {
        background: rgba(24, 24, 24, 0.95);
        border: 2px dashed rgba(255,255,255,0.08);
        color: #aaa;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        font-size: 1.1rem;
        transition: background 0.2s ease, border-color 0.2s ease;
    }

        .card[onclick]:hover {
            background: rgba(34, 34, 34, 0.95);
            border-color: #4a7a53;
            color: #fff;
        }

    .card-btns {
        position: absolute;
        top: 10px;
        right: 10px;
        display: flex;
        gap: 6px;
        z-index: 2;
    }

        .card-btns button {
            background: rgba(30,30,30,0.9);
            border: 1px solid rgba(255,255,255,0.08);
            border-radius: 50%;
            width: 34px;
            height: 34px;
            color: #ddd;
            cursor: pointer;
            transition: background 0.2s ease, color 0.2s ease;
        }

            .card-btns button:hover {
                background: #4a7a53;
                color: #fff;
            }

    /* Hide modal titles */
    .modal-content h4 {
        display: none;
        margin: 0;
        padding: 0;
    }
</style>

<h2>Movies</h2>
<div class="row">
    <!-- Add Movie Card -->
    <div class="col-md-4">
        <div class="card mb-4 box-shadow" style="cursor:pointer; text-align:center;" onclick="document.getElementById('addMovieModal').style.display='block'">
            <div class="card-body d-flex flex-column justify-content-center align-items-center" style="height: 225px;">
                <span style="font-size:48px; color:#007bff;">&#43;</span>
                <h5 class="card-title mt-2">Add Movie</h5>
            </div>
        </div>
    </div>

    <!-- Existing Movies -->
    @foreach (var movie in Model)
    {
        <div class="col-md-4">
            <div class="card mb-4 box-shadow" style="position:relative;">
                <div class="card-btns">
                    <button type="button"
                            title="Edit"
                            class="edit-btn"
                            data-id="@movie.MovieId"
                            data-title="@movie.Title"
                            data-year="@movie.ReleaseYear"
                            data-duration="@movie.DurationMinutes"
                            data-desc="@movie.Description"
                            data-thumb="@movie.ThumbnailUrl"
                            data-link="@movie.WatchLink">
                        <span>&#9998;</span>
                    </button>
                    <form method="post" asp-action="DeleteMovie" style="display:inline; margin:0; padding:0;">
                        <input type="hidden" name="id" value="@movie.MovieId" />
                        <button title="Delete" type="submit" onclick="return confirm('Are you sure you want to delete this movie?');"><span>&#128465;</span></button>
                    </form>
                </div>
                <img class="card-img-top" src="@movie.ThumbnailUrl" alt="@movie.Title" style="height: 225px; width: 100%; display: block;">
                <div class="card-body">
                    <h5 class="card-title">@movie.Title (@movie.ReleaseYear)</h5>
                    <p class="card-text"><small class="text-muted">Duration: @movie.DurationMinutes min</small></p>
                    <p class="card-text">
                        @((movie.Description.Length > 45) ? movie.Description.Substring(0, 45) + "…" : movie.Description)
                    </p>

                    @if (!string.IsNullOrEmpty(movie.WatchLink))
                    {
                        <a href="@movie.WatchLink" class="btn btn-primary" target="_blank">Watch</a>
                    }
                </div>
            </div>
        </div>
    }
</div>

<!-- Add Movie Modal -->
<div id="addMovieModal" class="modal">
    <div class="modal-content">
        <form method="post" asp-action="AddMovie">
            <input type="text" name="Title" placeholder="Title" required />
            <input type="number" name="ReleaseYear" placeholder="Release Year" />
            <input type="number" name="DurationMinutes" placeholder="Duration (minutes)" />
            <textarea name="Description" placeholder="Description"></textarea>
            <input type="text" name="ThumbnailUrl" placeholder="Thumbnail URL" />
            <input type="text" name="WatchLink" placeholder="Watch Link" />
            <button type="submit" class="submit-btn">Submit</button>
            <button type="button" class="cancel-btn" onclick="document.getElementById('addMovieModal').style.display='none'">Cancel</button>
        </form>
    </div>
</div>

<!-- Edit Movie Modal -->
<div id="editMovieModal" class="modal">
    <div class="modal-content">
        <form method="post" asp-action="EditMovie" id="editMovieForm">
            <input type="hidden" id="editMovieId" name="MovieId" />
            <input type="text" id="editTitle" name="Title" placeholder="Title" required />
            <input type="number" id="editReleaseYear" name="ReleaseYear" placeholder="Release Year" />
            <input type="number" id="editDurationMinutes" name="DurationMinutes" placeholder="Duration (minutes)" />
            <textarea id="editDescription" name="Description" placeholder="Description"></textarea>
            <input type="text" id="editThumbnailUrl" name="ThumbnailUrl" placeholder="Thumbnail URL" />
            <input type="text" id="editWatchLink" name="WatchLink" placeholder="Watch Link" />
            <button type="submit" class="submit-btn">Save</button>
            <button type="button" class="cancel-btn" onclick="document.getElementById('editMovieModal').style.display='none'">Cancel</button>
        </form>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        window.onclick = function(event) {
            var addModal = document.getElementById('addMovieModal');
            var editModal = document.getElementById('editMovieModal');
            if (event.target == addModal) addModal.style.display = "none";
            if (event.target == editModal) editModal.style.display = "none";
        };

        document.querySelectorAll('.edit-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                openEditModal(
                    this.dataset.id,
                    this.dataset.title,
                    this.dataset.year,
                    this.dataset.duration,
                    this.dataset.desc,
                    this.dataset.thumb,
                    this.dataset.link
                );
            });
        });

        window.openEditModal = function(id, title, year, duration, desc, thumb, link) {
            document.getElementById('editMovieId').value = id;
            document.getElementById('editTitle').value = title;
            document.getElementById('editReleaseYear').value = year || '';
            document.getElementById('editDurationMinutes').value = duration || '';
            document.getElementById('editDescription').value = desc;
            document.getElementById('editThumbnailUrl').value = thumb;
            document.getElementById('editWatchLink').value = link;
            document.getElementById('editMovieModal').style.display = 'block';
        };
    });
</script>
